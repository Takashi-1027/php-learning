連想配列
連想配列を使ってみよう
連想配列は、配列と同じく複数のデータをまとめて管理するのに用いられます。
配列との違いは、個々の要素を管理するのにインデックス番号ではなく、
「キー」と呼ばれる文字列などの値を指定することができる点です。
連想配列では「$配列名 = array（'キー名' => '値1',・・・）;」といったように、
「=>」を用いてキーと値をセットします。

参考画像：PHP_image_28.jpg


連想配列の使い方
連想配列の値を取り出すには、対応する「キー」を用いて「配列名「キー」」のようにします。
また図のように、「配列名「キー」 = 値;」のようにすることで、連想配列にデータを追加することができます。

参考画像：PHP_image_29.jpg


for文
繰り返し処理
1から100までの数値を出力するときのように、繰り返しで何かを行いたいときには繰り返し文を用います。
繰り返し分を使うことで、繰り返しの処理（ループ処理）を以下の図のようにたった数行で書くことが出来ます。

参考画像：PHP_image_30.jpg


for文
for文を用いることで繰り返し処理を行うことができます。図の例では、変数$iに1を初期値をして与え、
「echo $i;」を行っています。その後はループの条件を満たさなくなるまで値の更新「$i++」と、
「echo $i;」を繰り返し行います。

参考画像：PHP_image_31.jpg


while文
while文もfor文と同様に、繰り返し処理の一つです。
条件式を指定し、それがtrueの間、処理が繰り返し実行されます。
for文の時のように変数$iが自動的に増えていかないため、ここでループのたびに
「$i++;」を行っています。その後はループの条件を満たさなくなるまで値の更新「

参考画像：PHP_image_32.jpg

無限ループ
無限ループとは条件式が何周してもtrueのままで、永遠に終了しないループのことです。
無限ループはコンピューターに極端な負担を与えてしまうため、ループ処理を記述する際は条件式が
どこかでfalseになるように気を付けなければいけません。

参考画像：PHP_image_33.jpg

break文
break
break文は現在のループを強制的に中断する命令です。for, while, foreachなどの繰り返し分の中で利用できます。
break文はif文などの条件文と組み合わせて利用するのが一般的です。

参考画像：PHP_image_34.jpg


continue文
continue
ループそのものを完全に抜けてしまうbreak文に対して、continue文は現在の周だけをスキップし、
ループそのものは継続して実行します。
continue文もfor,while,foreachなどの繰り返し分の中で利用できます。　

参考画像：PHP_image_35.jpg


foreach文
foreach
foreach文とは、配列または連想配列に対して、先頭のデータから順に繰り返し処理を行うための命令です。
以下のように配列のデータを1つずつ取り出して処理を行うことが出来ます。
「as」の後ろの変数に、ループの度にデータが先頭から順に代入されていきます。
asの後ろの変数名は何を指定しても大丈夫です。

参考画像：PHP_image_36.jpg


foreachの書き方(1)
foreach文では、配列内のデータが順次「キー変数」、「値変換」に代入され、
それに対して処理が繰り返し適用されます。
「キー変数」には、配列のときはインデックス番号が、連想配列のときはキーが代入されます。
ただし、「キー変数」の部分は省略可能です。

参考画像：PHP_image_37.jpg

foreachの書き方(2)
foreach文は理解しにくいので少し例を見てみましょう。図の配列は、果物の名前を「キー」として、
その色を「値」として保持している連想配列です。
1週目のループでは、$keyに'Apple'、$valueに'Red'が、2週目のループでは
$keyに'Banana'、$valueに'Yellow'が入っています。

参考画像：PHP_image_38.jpg