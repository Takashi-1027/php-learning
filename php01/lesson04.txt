関数
関数を使ってみよう
関数とは、あるまとまった処理を行い、値を返すものです。PHPには便利な関数が元から組み込まれていて、
それらは組み込み関数と呼ばれます。「strlen」は組み込み関数の1つで、文字列の文字数を返します。
ここで、()の中に与える与える値を「引数」といいます。

参考画像：PHP_image_39.jpg


関数を使ってみよう
他の組み込み関数も見てみましょう。「count」は配列の要素の数を返す関数です。
「rand」は1つ目の引数と、2つ目の引数の間のランダムな整数を返します。
他にもPHPの組み込み関数は多数ありますが、覚える必要はありません。
目的に沿ってその都度便利な組み込みメソッドがないか検索して調べてみましょう。

参考画像：PHP_image_40.jpg


関数を自作する
関数を作ってみよう
自分で関数を作成することもできます。
重複する処理を一か所にまとめることで、コードに変更があった時に関数の中身を変更するだけで
全使用箇所に変更を適用することができます。
関数の定義の仕方など、詳しくは次のスライド以降で学習していきましょう。

参考画像：PHP_image_41.jpg


関数の作り方
関数を作るには「function 関数名(){処理}」という書き方をします。
関数名は自由につけることが出来ます。
関数は「関数名()」というように()をつけて呼び出すことができます。

参考画像：PHP_image_42.jpg


引数
関数を呼び出す際、関数に値を渡すと、関数内でその値を利用することができます。
この値を「引数」と呼びます。引数を関数内で使うには、それを受け取るための「仮引数」を、
関数の定義時に指定しておく必要があります。仮引数が複数ある場合はカンマ(,)を用いて指定します。

参考画像：PHP_image_43.jpg


戻り値
戻り値
関数は値を「返す」ことができて、この値のことを戻り値と呼びます。
関数を実行した結果、その関数実行部分が戻り値に置き換わるというイメージです。
戻り値は「return」で指定します。

参考画像：PHP_image_44.jpg


formタグ
フォームをつくろう
いよいよお問い合わせフォームを作っていきます。
フォームの見た目はHTMLでフォームを作成し、入力値を取得するためにPHPを使用していきます。

参考画像：PHP_image_45.jpg


フォームの準備をしよう
フォームを作りたいときは、HTMLの<form>タグを用います。
action属性にはデータを渡す先のURLを指定します。
method属性は値の送信の方法で、「get」と「post」のどちらかを指定します。
getの場合は送信される値がURLに表示され、postの場合はURLに表示されません。

参考画像：PHP_image_46.jpg


テキストボックス
テキストボックスを作ろう
テキストボックスを作るにはHTMLの<input type="text">を使います。
name属性は入力された値を取得するときに使う名前です。
後にフォームのデータを受け取るときに使用します。
<input>タグは閉じタグが必要ないことに注意しましょう。

参考画像：PHP_image_47.jpg


テキストボックスを作ろう
開業を含む文章のためのテキストボックスをつくるにはHTMLの<textarea>タグを用います。
<input>タグを同様にname属性に、入力値を取得するときに使う名前を指定します。
<textarea>タグは閉じタグが必要なので注意してください。

参考画像：PHP_image_48.jpg


$_POST
送信ボタンをつくろう
送信ボタンをつくるには<input type="submit">を用いて指定します。value属性に指定された値がボタン上に表示されます。

参考画像：PHP_image_49.jpg


フォームのデータを受け取ろう
フォームで送信した値を受け取るには「$_POST」を使用します。
「$_POST」は連想配列になっています。[]の中に、<input>と<textarea>の
name属性に指定した値を入れることで、それぞれの送信した値を受け取ることが出来ます。

参考画像：PHP_image_50.jpg


セレクトボックス
セレクトボックスの作り方
セレクトボックスを作るには図のように<select>タグの中に<option>タグを並べます。
<option>タグの中身が選択肢として表示されます。

参考画像：PHP_image_51.jpg


選んだ選択肢の値を渡そう
セレクトボックスの値の渡し方を見てみましょう。
<select>タグには「$_POST」で値を受け取るためのname属性を指定します。
<option>タグのvalue属性が送信される値です。

参考画像：PHP_image_52.jpg


フォームを完成させよう
フォームを完成させよう
いよいよ最後の演習になりました！繰り返し処理と変数展開を用いて多数のoptionタグを作りましょう。
ただし、変数展開を用いる際はダブルクォーテーションで囲むようにしましょう。　